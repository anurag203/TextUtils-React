{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","react_router_dom","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","placeholder","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","len_words","s","trim","split","ans","length","Fragment","style","color","heading","rows","backgroundColor","onChange","event","target","value","disabled","newUppertext","toUpperCase","showAlert","toLowerCase","i","navigator","clipboard","writeText","toFixed","About","mystyle1","setMystyle","aria-labelledby","data-bs-parent","Alert","height","alert","role","str","new_s","substr","capitalize","msg","defaultProps","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","react_router","exact","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.0b523895.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/About\">{props.aboutText}</Link>\r\n                        </li>\r\n                    </ul>\r\n                    <form className=\"d-flex\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                    </form>\r\n                    <div className={`form-check form-switch padd1 fifth text-${props.mode === \"light\" ? \"dark\" : \"light\"}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\"  id=\"flexSwitchCheckDefault\" />\r\n                        <label className=\"form-check-label sixth \" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nNavbar.propTypes = {\r\n    title: PropTypes.string,\r\n    aboutText: PropTypes.string\r\n};\r\nNavbar.defaultProps =\r\n{\r\n    title: \"Set Title Here\",\r\n    aboutText: \"Set AboutText here\"\r\n};","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const [text, setText] = useState(\"\");\r\n    function upperCase() {\r\n        // console.log(\"Uppercase was clicked\");\r\n        let newUppertext = text.toUpperCase();\r\n        setText(newUppertext);\r\n        props.showAlert(\"Converted to UpperCase!\",\"success\");\r\n    };\r\n    function lowerCase() {\r\n        // console.log(\"Uppercase was clicked\");\r\n        let newUppertext = text.toLowerCase();\r\n        setText(newUppertext);\r\n        props.showAlert(\"Converted to LowerCase!\",\"success\");\r\n    };\r\n    function capitalizeEachWord() {\r\n        let newUppertext = \"\";\r\n        for (let i = 0; i < text.length; i++) {\r\n            if (i === 0 || text[i - 1] === \" \") {\r\n                newUppertext += text[i].toUpperCase();\r\n            }\r\n            else newUppertext += text[i];\r\n        }\r\n        setText(newUppertext);\r\n        props.showAlert(\"Capatilized Each word!\",\"success\");\r\n    };\r\n    function copyText() {\r\n        navigator.clipboard.writeText(text);\r\n        props.showAlert(\"Text Copied to Clipboard!\",\"success\");\r\n    }\r\n    function removeExtraSpaces() {\r\n        let newUppertext = \"\";\r\n        for (let i = 0; i < text.length; i++) {\r\n            if ((i === 0 || text[i - 1] === \" \") && text[i] === \" \") {\r\n                continue;\r\n            }\r\n            else newUppertext += text[i];\r\n        }\r\n        setText(newUppertext);\r\n        props.showAlert(\"Removed Extra Spaces!\",\"success\");\r\n    };\r\n    function clearAll() {\r\n        // console.log(\"Uppercase was clicked\");\r\n        setText(\"\");\r\n        props.showAlert(\"Cleared All!\",\"success\");\r\n    };\r\n    function handleOnChange(event) {\r\n        // console.log(\"on change\");\r\n        setText(event.target.value);\r\n    };\r\n    function len_words(){\r\n        let s=text.trim().split(/\\s+/);\r\n        let ans =s.length;\r\n        if(s[s.length-1].length===0) ans--;\r\n        return ans;\r\n    };\r\n    return (\r\n        <>\r\n            <div className=\"container my-4\">\r\n                <h1 className='fourth' style={{ color: props.mode === \"light\" ? \"black\" : \"white\" }}>{props.heading}</h1>\r\n                <div className=\"mb-3 my-4\" >\r\n                    {/* <label for=\"myBox\" className=\"form-label\">{props.heading}</label> */}\r\n                    <textarea className=\"form-control\" id=\"myBox\" rows=\"10\" style={{ backgroundColor: props.mode === \"light\" ? \"white\" : \"black\", color: props.mode === \"light\" ? \"black\" : \"white\" }} onChange={handleOnChange} value={text} placeholder='Enter the text...' ></textarea>\r\n                </div>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={upperCase}>Convert to Upppercase</button>\r\n                <button disabled={text.length===0} className=\"btn btn-secondary mx-2  my-1\" onClick={lowerCase}>Convert to Lowercase</button>\r\n                <button disabled={text.length===0} className=\"btn btn-danger mx-2  my-1\" onClick={capitalizeEachWord}>Capitalize Every Word</button>\r\n                <button disabled={text.length===0} className=\"btn btn-warning mx-2  my-1\" onClick={copyText}>Copy Text</button>\r\n                <button disabled={text.length===0} className=\"btn btn-info mx-2  my-1\" onClick={removeExtraSpaces}>Remove Extra Spaces</button>\r\n                <button disabled={text.length===0} className=\"btn btn-dark mx-2  my-1\" onClick={clearAll}>Clear All</button>\r\n            </div>\r\n            <div className=\"container my-3\">\r\n                <div className=\"second\">\r\n                    <h2 className='third'>Your text summary</h2>\r\n                    <p className='first'>{len_words()} words, {text.length} characters </p>\r\n                    <p className='first'>{(0.008 * len_words()).toFixed(4)} minutes to read</p>\r\n                </div>\r\n                <div className=\"secondd\" style={{ color: props.mode === \"light\" ? \"black\" : \"white\" }}>\r\n                    <h2 className='third'>Preview</h2>\r\n                    <p className={`my-4 ${text.length===0 ? \"text-muted\" :\"\"}`}> {text.length > 0 ? text : \"Enter something in the textbox to preview it here...\"}</p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function About(props) {\r\n\r\n    const [mystyle1, setMystyle] = useState({\r\n        color: \"black\",\r\n        backgroundColor: \"white\"\r\n    });\r\n    function toggleStyle() {\r\n        if (mystyle1.color === \"white\") {\r\n            setMystyle({\r\n                color: \"black\",\r\n                backgroundColor: \"white\"\r\n            });\r\n        }\r\n        else {\r\n            setMystyle({\r\n                color: \"white\",\r\n                backgroundColor: \"black\"\r\n            });\r\n        }\r\n    };\r\n    if ((props.mode === \"light\" && mystyle1.color === \"white\") || (props.mode === \"dark\" && mystyle1.color === \"black\")) {\r\n        toggleStyle();\r\n    }\r\n    return (\r\n        <div className='container' style={mystyle1}>\r\n            <h1 className='my-4'>About Us</h1>\r\n            <div className=\"accordion\" id=\"accordionExample\" >\r\n                <div className=\"accordion-item\" >\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                        <button className=\"accordion-button\" type=\"button\" style={mystyle1} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                        How to Use TextUtils?\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" style={mystyle1} aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            <strong>The editor on our website is an easy </strong> to use tool for text editing online that doesn’t make its users go through or follow any intricate procedures for editing their text files. Copy-paste your text in the box provided on this tool or upload the text file by browsing it from your device. Use the editing buttons to format the text as per your requirements. Use copy text Button to copy your edited Text.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\" >\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                        <button className=\"accordion-button collapsed\" style={mystyle1} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                        Key Benefits of TextUtils...\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" style={mystyle1} aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            <strong>Easy to Use</strong> There are no technicalities involved with the usage of this tool. You can start using the text editing service on the go as soon as you access this tool.\r\n                            <strong> Fast and Error free editing</strong> The tool is a super-fast service that allows you to edit any text in a matter of a few minutes. It provides the users with an error-free editing facility.\r\n                            <strong> Shows charcter and Word count</strong> This also shows the count of characters and words in the text.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\" >\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                        <button className=\"accordion-button collapsed\" style={mystyle1} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                            Funtions Available in TextUtils...\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" style={mystyle1} aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            <strong>There are many funcitons available : </strong> Convert to Uppercase, Convert to Lowercase, Capitalize first letter of every word, Remove extra spaces and Copy the edited text.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nexport default function Alert(props) {\r\n    function capitalize(str) {\r\n        let new_s = \"\", s = str.toLowerCase();\r\n        new_s += s[0].toUpperCase();\r\n        new_s += s.substr(1);\r\n        return new_s;\r\n    }\r\n    return (\r\n        <div style={{ height: \"50px\" }} >\r\n\r\n            {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show container my-2`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)} </strong> : {props.alert.msg}\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\r\nimport Navbar from './components/Navbar';\r\nimport TextForm from './components/TextForm';\r\nimport About from './components/About';\r\nimport React, { useState } from 'react'\r\nimport Alert from './components/Alert';\r\nimport {BrowserRouter as Router,Routes,Route\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  const [mode, setMode] = useState(\"light\");\r\n  const [alert, setAlert] = useState(null);\r\n  function toggleMode() {\r\n    if (mode === \"light\") {\r\n      setMode(\"dark\");\r\n      document.body.style.backgroundColor = \"black\";\r\n      showAlert(\"Dark mode has been enabled\", \"success\");\r\n    }\r\n    else {\r\n      setMode(\"light\");\r\n      document.body.style.backgroundColor = \"white\";\r\n      showAlert(\"Light mode has been enabled\", \"success\");\r\n    }\r\n  };\r\n  function showAlert(message, type) {\r\n    setAlert({\r\n      msg: message,\r\n      type: type\r\n    });\r\n    setTimeout(() => {\r\n      setAlert(null);\r\n    }, 1500);\r\n  };\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" mode={mode} toggleMode={toggleMode} />\r\n        <Alert alert={alert} />\r\n        <Routes>\r\n        <Route exact path=\"/\" element={<TextForm heading=\"Enter the test to analyze below:\" mode={mode} showAlert={showAlert} />} />\r\n        <Route exact path=\"/about\" element={<About mode={mode} />} />\r\n        </Routes>\r\n      </Router>\r\n      {/* <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" mode={mode} toggleMode={toggleMode} />\r\n      <Alert alert={alert} />\r\n      <TextForm heading=\"Enter the test to analyze below:\" mode={mode} showAlert={showAlert} />\r\n      <About/> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}